# Load packages and data
rm(list = ls())
x <- c("rgdal", "rgeos", "maptools", "dplyr", "sp", "zoo",
"ggmap", "ggplot2", "plyr", "tmap", "RColorBrewer")
lapply(x, library, character.only = TRUE)
load("~/Dropbox/AIV/huc4plotsamples.RData")
load("~/Dropbox/AIV/nSamplesPlot.RData")
plot.utm <- spTransform(huc4plot, CRS("+proj=utm +zone=14 +datum=WGS84"))
plot <- fortify(plot.utm)
plot.utm$id <- row.names(plot.utm)
plot <- left_join(plot, plot.utm@data)
qa <- quantile(c(nSample[nSample>0]), c(0, 0.2, 0.4, 0.6, 0.8, 1))
plot$nSample
plot$long
plot$nSample[1]
plot$nSample[1000]
plot$nSample[2000]
plot$nSample[2800]
plot$nSample[28000]
plot$nSample[28000,1]
plot$nSample[28000][1]
plot$nSample[[28000]]
plot$nSample[[1]]
plot$nSample[[1]][1]
plot$nSample[[:]][1]
plot$nSample[[]][1]
plot$nSample[[2]][1]
plot$nSample[[27890]][1]
plot$nSampleQuantile <- cut(plot$nSample, c(0, qa),
labels = c("None", paste(as.character(qa[1]),"-",as.character(qa[2]-1)),
paste(as.character(qa[2]),"-",as.character(qa[3]-1)),
paste(as.character(qa[3]),"-",as.character(qa[4]-1)),
paste(as.character(qa[4]),"-",as.character(qa[5]-1)),
paste(as.character(qa[5]),"-",as.character(qa[6]-1))),
include.lowest = TRUE, right = FALSE)
plot$nSample
plot$nSampleQuantile <- lapply(plot$nSample, cut, breaks=c(0, qa),
labels = c("None", paste(as.character(qa[1]),"-",as.character(qa[2]-1)),
paste(as.character(qa[2]),"-",as.character(qa[3]-1)),
paste(as.character(qa[3]),"-",as.character(qa[4]-1)),
paste(as.character(qa[4]),"-",as.character(qa[5]-1)),
paste(as.character(qa[5]),"-",as.character(qa[6]-1))),
include.lowest = TRUE, right = FALSE)
pal <-c("grey80", brewer.pal(5, "BuGn"))
p1 <- ggplot(plot, aes(long, lat, group = group, fill = lapply(nSampleQuantile, function(l) l[[1]]))) +
geom_polygon(colour = "black") + # guide = FALSE
#theme_clean() +
scale_fill_manual(values = pal) +
coord_equal() +
expand_limits(x = plot$long, y = plot$lat) +
labs(fill = "Samples")
#setwd("~/GitHub/AvianInfluenza/Chris")
pdf("samplestest.pdf", width = 9, height = 7)
stop
pdf("samplestest.pdf", width = 9, height = 7)
p1
qa
huc4plot$nSampleQuantile <- lapply(huc4plot$nSample,cut, breaks= c(0, qa),
labels = c("None", paste(as.character(qa[1]),"-",as.character(qa[2]-1)),
paste(as.character(qa[2]),"-",as.character(qa[3]-1)),
paste(as.character(qa[3]),"-",as.character(qa[4]-1)),
paste(as.character(qa[4]),"-",as.character(qa[5]-1)),
paste(as.character(qa[5]),"-",as.character(qa[6]-1))),
include.lowest = TRUE, right = FALSE)
huc4plot$nSampleQuantile
lapply(huc4plot$nSampleQuantile, function(l) l[[1]])
plot(huc4plot, col = lapply(huc4plot$nSampleQuantile, function(l) l[[1]]))
pal
pal[lapply(huc4plot$nSampleQuantile, function(l) l[[1]]))]
pal[lapply(huc4plot$nSampleQuantile, function(l) l[[1]])]
View(huc4plot)
plot(huc4plot)
dev.off()
pdf("samplestest2.pdf", width = 9, height = 7)
huc4plot$nSampleQuantile
levels(huc4plot$nSampleQuantile)
lapply(levels,huc4plot$nSampleQuantile)
lapply(huc4plot$nSampleQuantile,levels)
x <- c("rgdal", "rgeos", "maptools", "dplyr", "sp", "zoo",
"ggmap", "ggplot2", "plyr", "tmap", "RColorBrewer")
lapply(x, library, character.only = TRUE)
load("~/Dropbox/AIV/huc4plot2.RData")
load("~/Dropbox/AIV/nSamplesPlot.RData")
plot <- fortify(huc4plot2)
huc4plot2$id <- row.names(huc4plot2)
plot <- left_join(plot, huc4plot2@data)
plot$nPosSample
pal <-c("grey80", brewer.pal(5, "BuGn"))
#Get quantiles
nSample1qa <- quantile(c(nSample[nSample>0]), c(0, 0.2, 0.4, 0.6, 0.8, 1))
pal <-c("grey80", brewer.pal(5, "BuGn"))
nSampleQuantile <- lapply(huc4plot2$nSample, cut, breaks=c(0, nSample1qa),include.lowest = TRUE, right = FALSE)
plot$nSampleQuantile <- lapply(huc4plot2$nSample, cut, breaks=c(0, nSample1qa),include.lowest = TRUE, right = FALSE)
plot$nSampleQuantile <- lapply(plot$nSample, cut, breaks=c(0, nSample1qa),include.lowest = TRUE, right = FALSE)
p1 <- ggplot(plot, aes(long, lat, group = group, fill = lapply(nSampleQuantile,function(l) l[[2]]))) +
geom_polygon(colour = "black") + # guide = FALSE
#theme_clean() +
scale_fill_manual(values = pal) +
coord_equal() +
expand_limits(x = plot$long, y = plot$lat) +
labs(fill = "Samples")
pdf("test2.pdf", width = 9, height = 7)
dev.off()
pdf("test2.pdf", width = 9, height = 7)
p1
lapply(plot$nSampleQuantile,function(l) l[[2]])
shiny::runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
shiny::runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
runApp('Dropbox/AIV/Dashboard')
shiny::runApp('Dropbox/AIV/avianinfluenza')
install.packages('profvis')
profvis(runApp())
library(profvis)
profvis(runApp())
profvis(runApp())
setwd("~/Dropbox/AIV/avianinfluenza")
profvis(runApp())
runApp()
library(rsconnect)
deployApp()
runApp()
load("data/shinyHUC.RData")
s = c(1800000,4000000)
d <- data.frame(x=1800000,y=4000000)
xy <- d[,c(1,2)]
s <- SpatialPointsDataFrame(coords = xy, data = d,
proj4string = CRS("+proj=utm +zone=14 +datum=WGS84"))
indata <- over(s,huc4plot)
huc4plot[1]
huc4plot[1]$OBJECTID
huc4plot$labpt
huc4plot$polygons
huc4plot$POLYGONS
gCentroid(huc4plot)
library(sp)
huc4plot@polygons
huc4plot@polygons[1]
huc4plot@polygons[[1]]
huc4plot@polygons$area
huc4plot@polygons[[1]]$area
huc4plot@polygons[1]$area
slotNames(huc4plot@polygons[[1]])
huc4plot@polygons[[1]]
huc4plot@polygons@labpt
huc4plot@polygons[[1]]@labpt
which(huc4plot$OBJECTID==4)
which(huc4plot$OBJECTID==201)
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
deployApp()
deployApp()
runApp()
runApp()
deployApp()
